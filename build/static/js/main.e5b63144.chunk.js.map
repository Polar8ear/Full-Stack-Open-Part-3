{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["URL","persons","getAll","axios","get","then","response","data","update","newPerson","post","remove","id","delete","changePhoneNum","changedPerson","put","Filter","filter","setFilter","value","onChange","event","target","PersonsForm","setPersons","newName","setNewName","newNumber","setNewNumber","handleSubmit","onSubmit","type","Details","handleDelete","personsToShow","person","name","toUpperCase","includes","map","number","onClick","Message","notification","className","status","message","App","useState","setNotification","useEffect","dataService","preventDefault","some","window","confirm","existingPersonIndex","findIndex","copyPersons","setTimeout","catch","concat","existingPerson","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5b63144.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst URL=\"/api/persons\"\r\n\r\n\r\nconst getAll = () =>{\r\n    return axios.get(URL).then(response=>response.data)\r\n}\r\n\r\nconst update = (newPerson) =>{\r\n    return axios.post(URL,newPerson).then(response=>response.data)\r\n}\r\n\r\nconst remove = (id) =>{\r\n    return axios.delete(`${URL}/${id}`)\r\n}\r\n\r\nconst changePhoneNum = (id,changedPerson) =>{\r\n    return axios.put(`${URL}/${id}`,changedPerson).then(response=>response.data)\r\n\r\n}\r\n\r\nconst persons={getAll,update,remove,changePhoneNum}\r\n\r\nexport default persons","import React, { useEffect,useState } from 'react'\nimport dataService from \"./services/persons\"\n\nconst Filter = ({filter,setFilter}) => {\n  return(\n    <form>\n        <div>\n            filter: <input value={filter} onChange={(event)=>setFilter(event.target.value)} />\n        </div>\n      </form>\n  )\n}\n\nconst PersonsForm = ({persons,setPersons,newName,setNewName,newNumber,setNewNumber,handleSubmit}) =>{  \n\n  return(\n    <div>\n      <h3>Add a new</h3>\n\n      <form onSubmit={handleSubmit}>\n        <div>\n          name: <input value={newName} onChange={(event)=>setNewName(event.target.value)} />\n        </div>\n\n        <div>\n          number: <input value={newNumber} onChange={(event)=>setNewNumber(event.target.value)} />\n        </div>\n        \n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nconst Details = ({persons,filter,handleDelete}) =>{\n  const personsToShow = !filter\n  ? persons\n  : persons.filter((person)=>{\n  return(\n          person.name.toUpperCase().includes(filter.toUpperCase())\n          )\n        }\n      )\n  \n  \n  const showDetails = (person) => {\n    return(\n      <div key={person.name}>\n        {person.name} {person.number} <button onClick={(event)=>handleDelete(event,person)}>Delete</button>\n      </div>\n    )\n  }\n\n  return(\n    <div>\n      <h3>Number</h3>\n      {personsToShow.map(showDetails)}\n    </div>\n  )\n}\n\nconst Message = ({notification}) =>{\n  if(notification===null){\n    return null\n  }\n  return(\n    <div className={`message ${notification.status}`}>{notification.message}</div>\n  )\n}\n\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [filter, setFilter] = useState('');\n  const [notification, setNotification] = useState(null);\n\n  useEffect(()=>{\n    dataService.getAll()\n         .then(data=>setPersons(data))\n  },[])\n\n  const addNewPerson = (event) =>{\n    event.preventDefault()\n    const newPerson ={name:newName,number:newNumber}\n    setNewName(\"\")\n    setNewNumber(\"\")\n    if(!persons.some((person)=>newPerson.name.toUpperCase()===person.name.toUpperCase())){\n      dataService.update(newPerson)\n           .then(data=>{\n              setPersons(persons.concat(data))\n              setNotification({status:\"confirmation\",message:`Added ${newPerson.name}`})\n              setTimeout(()=>setNotification(null),5000)\n           })\n    } \n    else if(window.confirm(`${newPerson.name} is already added to the phonebook, replace the old number with a new one?`)){\n        const existingPersonIndex = persons.findIndex(person=>person.name.toUpperCase()===newName.toUpperCase())\n        const copyPersons=[...persons]\n        dataService.changePhoneNum(persons[existingPersonIndex].id,newPerson)\n                  .then(data=>{\n                    copyPersons[existingPersonIndex]=data\n                    setPersons(copyPersons)\n                    setNotification({status:\"confirmation\",message:`Changed ${newPerson.name}'s number`})\n                    setTimeout(()=>setNotification(null),3000)\n                  })\n                  .catch(()=>{\n                    setNotification({status:\"error\",message:`Information of ${newPerson.name} has already been removed from the server`})\n                    setTimeout(()=>setNotification(null),3000)\n                  })\n    }\n  }\n\n  const handleDelete = (event,person) =>{\n    if(window.confirm(`Do you want to delete ${person.name}`)){\n      dataService.remove(person.id)\n                 .then( setPersons(persons.filter(existingPerson=>existingPerson.id!==person.id) ) )\n    }\n  }\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Message notification={notification}/>\n      <Filter filter={filter} setFilter={setFilter}/>\n\n      <PersonsForm persons={persons} setPersons={setPersons} \n               newName={newName} setNewName={setNewName} \n               newNumber={newNumber} setNewNumber={setNewNumber}\n               handleSubmit={addNewPerson}/>\n\n      <Details persons={persons} filter={filter} handleDelete={handleDelete}/>\n      \n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}